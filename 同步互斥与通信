4 同步互斥与通信
4.1 同步互斥与通信的概念
同步：任务之间按照某种规则进行协调和按序执行的过程。
互斥：互斥是指在多任务环境中，运行特定代码段时确保数据的一致性和完整性，避免多个任务同时访问和修改共享资源导致错误发生。
通信：通信是指任务之间交换信息和共享数据的过程，让彼此知道发生了什么，传递必要的信息和状态。
4.2 实现同步互斥与通信
能实现同步、互斥的内核方法有很多：任务通知(task notification)，队列(queue),事件组(event group),信号量(semaphore),互斥量(mutex)
他们都有类似的操作方法：获取/释放，阻塞/唤醒，超时。比如：
A获取资源，用完后A释放资源
A获取不到资源则阻塞，B释放资源并把A唤醒
A获取不到资源则阻塞，并定个闹钟；A要么超时返回，要么在这段时间内因为B释放资源而被唤醒。
 
图表 37 同步与互斥的方法

队列：队列内可以存放任意数据，任务、ISR都可以放入数据，也都可以从中读取数据，但是一个数据只能唤醒一个接收者

事件组：一个事件用1个bit表示，1表示事件发生，0表示事件没有发生，不能传递数据，多个事件可以用多个bit，而且事件可以对多个接收者起效，类似广播。

信号量：信号量相当于计数器，任务、ISR释放信号量时释放量计数值加一，任务、ISR获取信号量时计数值减一

任务通知：核心是任务TCB里的数值，任务通知必须指定接收者，只能由接收任务本身获取该通知。

互斥量：数值只有0和1，谁获得互斥量就必须释放同一个互斥量
 
图表 38 同步与互斥

